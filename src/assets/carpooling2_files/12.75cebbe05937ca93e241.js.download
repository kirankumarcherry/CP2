(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"0raH":function(e,t,r){e.exports=r.p+"Ellipse 161.c11aac59affa6e3c090f.png"},"0ytk":function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var i=r("AytR"),o=function(){function e(e){this.http=e,this.rideMgmt=i.a.RIDE_MANAGEMENT_SERVER}return e.prototype.getUpcomingRides=function(e){var t=this;return this.http.get(this.rideMgmt+"/ride/all/active?userId="+e).subscribe((function(e){t.upcomingRidesObject=e,console.log(e)}),(function(e){console.log(e.resultData)}))},e.prototype.getClosedRides=function(e){var t=this;return this.http.get(this.rideMgmt+"/ride/all/closed?userId="+e).subscribe((function(e){t.closedRidesObject=e,console.log(e)}),(function(e){console.log(e.resultData)}))},e.prototype.cancelPassengerRide=function(e){return this.http.put(this.rideMgmt+"/passengerride/cancelride",e)},e.prototype.cancelRiderRide=function(e){return this.http.put(this.rideMgmt+"/riderride/cancelride",e)},e.prototype.postRecurringRide=function(e){return this.http.post(this.rideMgmt+"/regularpassengerride",e)},e.prototype.deleteRegularPassengerRide=function(e){return this.http.delete(this.rideMgmt+"/regularpassengerride",{params:e})},e.prototype.deleteRegularRiderRide=function(e){return this.http.delete(this.rideMgmt+"/regularriderride",{params:e})},e.prototype.updatePassengerRideStatus=function(e){return this.http.put(this.rideMgmt+"/passengerride/status",e)},e.prototype.updateRiderRideStatus=function(e){return this.http.put(this.rideMgmt+"/riderride/status",e)},e.prototype.updateRegularPassengerRideStatus=function(e){return this.http.put(this.rideMgmt+"/regularpassengerride/status",e)},e.prototype.updateRegularRiderRideStatus=function(e){return this.http.put(this.rideMgmt+"/regularriderride/status",e)},e.prototype.reschedulePassengerRide=function(e){return this.http.put(this.rideMgmt+"/passengerride/reschedule",e)},e.prototype.rescheduleRiderRide=function(e){return this.http.put(this.rideMgmt+"/riderride/reschedule",e)},e.prototype.createRiderRide=function(e){return this.http.post(this.rideMgmt+"/riderride",e)},e.prototype.createPassengerRide=function(e){return this.http.post(this.rideMgmt+"/passengerride",e)},e}()},"3d1U":function(e,t,r){e.exports=r.p+"ic_drop_marker_v1_small.f0d36981f063bb9f8cea.png"},"3hPS":function(e,t,r){e.exports=r.p+"start_icon.ab598ffb3e48a4fade19.png"},"4E52":function(e,t,r){e.exports=r.p+"ic_pickup_marker.14fa6ab037b68952d9f4.png"},Badm:function(e,t,r){e.exports=r.p+"Ellipse 163.76f421a1a9f2c48010e9.png"},Dfg3:function(e,t,r){"use strict";r.d(t,"a",(function(){return n}));var i=r("AytR"),o=r("sE5F"),a=r("CcnG"),s=r("t/Na"),n=function(){function e(e,t){this.http=e,this.http1=t,this.RiderLocationUpdatePath=i.a.RIDE_LOCATION_SERVER+"/ridelocation/location",this.getRideParticipantsLocationFromServer=i.a.RIDE_LOCATION_SERVER_Without_QPA+"/QRRideLocation/location",this.gettingTheRoutePath=i.a.ROUTE_REPOSITORY_SERVER+"/routepath/route/all",this.reverseGeocodeAPI=i.a.ROUTE_REPOSITORY_SERVER+"/location/geocode/latlng"}return e.prototype.getParticipantsOfRide=function(e){return this.http.get(i.a.RIDE_MANAGEMENT_SERVER+"/ride/participant/all",{params:e})},e.prototype.RiderLocationUpdate=function(e){var t=new o.Headers({"APP-TOKEN":localStorage.getItem("partnerAppToken"),"Content-Type":"application/x-www-form-urlencoded",Authorization:localStorage.getItem("token")});return this.http1.post(this.RiderLocationUpdatePath,e.toString(),{headers:t})},e.prototype.GettingTheRoutePath=function(e){return this.http.get(this.gettingTheRoutePath,{params:e})},e.prototype.ReverseGeocodeAPI=function(e){return this.http.get(this.reverseGeocodeAPI,{params:e})},e.prototype.getRideParticipantsLocation=function(e){return this.http.get(this.getRideParticipantsLocationFromServer,{params:e})},e.ngInjectableDef=a.defineInjectable({factory:function(){return new e(a.inject(s.c),a.inject(o.Http))},token:e,providedIn:"root"}),e}()},Du6M:function(e,t,r){e.exports=r.p+"car.cf908974cc188906ac55.png"},HH9Q:function(e,t,r){e.exports=r.p+"Group 1002.10f7415a472cd0496770.svg"},OYeo:function(e,t,r){e.exports=r.p+"bike_ic.77857bb0be51bf10a1ef.png"},R6GP:function(e,t,r){"use strict";r.d(t,"a",(function(){return c}));var i=r("CcnG"),o=(r("VlT0"),r("0ytk"),r("Rjk6")),a=r("t/Na"),s=r("yg5c"),n=r("Z9j4"),l=r("LvDl"),p=(r("Dfg3"),r("6blF")),c=function(){function e(e,t,r,o,a,s,n,l,p,c){this.ref=e,this.cdr=t,this.mapsApiLoader=r,this.datepipe=o,this.dialog=a,this.snackBar=s,this.myRidesService=n,this.router=l,this.mapService=p,this.deviceService=c,this.TYPE_PASSENGER="Passenger",this.TYPE_RIDER="Rider",this.pickupCoords=new i.EventEmitter,this.rideCreated=new i.EventEmitter,this.destinationCoords=new i.EventEmitter,this.pickupAddress=new i.EventEmitter,this.freezeRideCalled=new i.EventEmitter,this.unfreezeRideCalled=new i.EventEmitter,this.riderScheduleCalled=new i.EventEmitter,this.passengerScheduleCalled=new i.EventEmitter,this.riderCancelCalled=new i.EventEmitter,this.passengerCancelCalled=new i.EventEmitter,this.routePath=new i.EventEmitter,this.rideFlag=0,this.lng=0,this.lat=0,this.address={},this.direction={},this.pickdropdirection={},this.passengerFromPickupdirection={},this.riderFromPickupdirection={},this.passengerdroptodirection={},this.riderdroptodirection={},this.showRideDetails=!1,this.showFreezeRide=!1,this.showLockButton=!1,this.showUnlockButton=!1,this.alllocation=[],this.riderFromPickup=[],this.pickupToDrop=[],this.dropToRiderto=[],this.passengerfrompickup=[],this.passengerdropto=[],this.mapHeight="",this.todaysDate=new Date,this.testVt="",this.waypoints="",this.passengersPickupAndDrop=[],this.markers=[],this.previousLatLng=[],this.participantETAInfo=[],this.mapCss="",this.riderObject=[],this.orderedParticipantsList=[],this.arrangeParticipantsList=[],this.arrangedParticipantsListFinal=[],this.tempMarkers=[],this.CurrentRidePathPolyline=[],this.currentPassegerETAUpdate=[],this.Riderstatus=!1,this.temp=""}return e.prototype.ngOnInit=function(){if(JSON.parse(localStorage.getItem("showCurrentRide"))?(this.showCurrentRide=JSON.parse(localStorage.getItem("showCurrentRide")),console.log("this.showCurrentRide ",this.showCurrentRide),this.testVt=this.showCurrentRide.vehicleType,console.log("this.testVt",this.testVt),this.showRideDetails=!0,this.showFreezeRide=!0):(this.showRideDetails=!1,this.showFreezeRide=!1),this.showDirections=!0,this.showMarker=!0,this.getLocalData(),this.ETADistance="0",this.ETADuration="0",this.isLoading=!1,this.showETA=!1,this.setMarker(),this.DestinationLatLng="",this.RiderRideCompleted=!1,this.iconPositionMap(),this.findCurrentPosition(),null!=localStorage.getItem("NewPassengeruserId")&&(this.currentRideShowingOnMap=JSON.parse(localStorage.getItem("CurrentRide")),this.getAllParticipants(this.currentRideShowingOnMap.id)),null!=localStorage.getItem("userRole")&&(this.rideType=localStorage.getItem("userRole"),"Rider"==this.rideType?this.rideStart?(console.log("freezeRideMoment-Rider 232 in map"),this.mapCss="freezeRideMoment-Rider"):(console.log("freezeRideMoment-Rider 236 in map"),this.mapCss="freezeRide-Rider"):null!=localStorage.getItem("joinedRiderDetails")?(this.mapCss="PassengerJoinedRider",console.log("freezeRideMoment-Rider 243 in map")):(console.log("freezeRideMoment-Rider 246 in map"),this.mapCss="freezeRide-passenger")),this.markers=null!=localStorage.getItem("ParticipantsMarker")?JSON.parse(localStorage.getItem("ParticipantsMarker")):[],this.RiderCurrentPosition(!1,!1),null!=localStorage.getItem("LiveRideCurrentData")){var e=JSON.parse(localStorage.getItem("LiveRideCurrentData"));this.ETADistance=e.ETADistance,this.ETADuration=e.ETADuration,this.currentLat=e.currentLat,this.currentLng=e.currentLng,this.lastUpdateTime=e.lastUpdateTime,this.squenceNo=e.squenceNo,this.vehicleAngle=e.vehicleAngle,this.participantETAInfo=e.participantETAInfo,this.riderLocationUpdate()}console.log("map obj",this.MAP_OBJ),null!=localStorage.getItem("PassengerMarker")&&(this.markers=JSON.parse(localStorage.getItem("PassengerMarker"))),this.checkPlatform()},e.prototype.checkLocationPermissionStattus=function(){var e=this;navigator.permissions.query({name:"geolocation"}).then((function(t){if("denied"===t.state||"promt"===t.state){var r=JSON.parse(localStorage.getItem("RiderProfile"));e.lat=r.primaryAreaLat,e.lng=r.primaryAreaLng,e.latlng={lat:e.lat,lng:e.lng},e.pickupCoords.emit(JSON.stringify(e.latlng))}}))},e.prototype.ngOnChanges=function(e){if(null!==this.pickup&&null!==this.dest&&console.log("chnages map directions ",this.pickup),null!==this.passengerfrom&&null!==this.riderfrom&&null!==this.pickupfrom&&null!==this.drop&&null!==this.passengerto&&null!==this.riderto&&this.showMapDirectionsForRider(this.passengerfrom,this.riderfrom,this.pickupfrom,this.drop,this.passengerto,this.riderto),JSON.parse(localStorage.getItem("CurrentRide"))&&(this.currentRideShowingOnMap=JSON.parse(localStorage.getItem("CurrentRide"))),e.PassengerJoinedAlert&&(console.log("1",e.PassengerJoinedAlert,e.PassengerJoinedAlert.currentValue),void 0!==e.PassengerJoinedAlert.currentValue&&this.PassengerJoinedAlert)){console.log("passengerJoinedcalled"+this.PassengerJoinedAlert);var t=JSON.parse(localStorage.getItem("CurrentRide"));console.log("currentRideObject",t.id,t),this.getAllParticipants(t.id)}if(e.PassengerCheckInAlert&&(console.log("passengerCheckInAlert",e.PassengerCheckInAlert,e.PassengerCheckInAlert.currentValue),void 0!==e.PassengerCheckInAlert.currentValue&&this.PassengerCheckInAlert&&(console.log("2"),console.log("PassengerCheckInAlert"+this.PassengerCheckInAlert),this.updatePassengerETAInfo())),e.userRole&&(console.log("userrole",e.userRole.currentValue,this.userRole,JSON.parse(localStorage.getItem("CurrentRide"))),void 0!==e.userRole.currentValue&&this.userRole)){var r=JSON.parse(localStorage.getItem("CurrentRide"));this.rideType=r.rideType,console.log("currentUserRole in map 339",this.rideType),localStorage.setItem("userRole",this.rideType),this.mapCss="Rider"==this.rideType?"freezeRide-Rider":"freezeRide-passenger"}if(e.RiderJoined&&void 0!==e.RiderJoined.currentValue&&this.RiderJoined&&(this.Riderstatus=!0),e.mqttObj&&(console.log("mqtt in map",this.mqttObj),void 0!==e.mqttObj.currentValue&&(console.log("map-324","Rider"===e.mqttObj.currentValue.rideType,this.PassengerJoinedAlert,"Passenger"===e.mqttObj.currentValue.rideType),"Rider"===e.mqttObj.currentValue.rideType&&(this.PassengerJoinedAlert&&localStorage.setItem("NewPassengeruserId",e.mqttObj.currentValue.passengerUserId),this.checkMqttAndUpdatePassengerStatus(e.mqttObj.currentValue)),"Passenger"===e.mqttObj.currentValue.rideType&&(console.log("passenger type mqtt called",this.mqttObj,"Passenger"===e.mqttObj.currentValue.rideType),this.checkMqttAndUpdateRiderStatus(e.mqttObj.currentValue)))),e.mapIconLocationUpdate&&void 0!==e.mapIconLocationUpdate.currentValue&&(console.log("condition map update",1==this.mapIconLocationUpdate,"true"==this.mapIconLocationUpdate),1==this.mapIconLocationUpdate&&(console.log("allmapiconupdate"),this.callMapIconUpdate())),e.callMyRide&&(console.log("callMyRide inside change ",this.callMyRide),void 0!==e.callMyRide.currentValue&&""!=this.callMyRide&&this.gettingMyRideRoutePath(this.callMyRide)),e.unjoinedPassengerId&&(console.log("callMyRide inside change ",this.unjoinedPassengerId),void 0!==e.unjoinedPassengerId.currentValue&&""!=this.unjoinedPassengerId&&(this.cancelOrCompleteRideFromPassenger(this.unjoinedPassengerId),null!=localStorage.getItem("Rideparticipants")))){var i=localStorage.getItem("Rideparticipants").length;console.log("made ETA false for Rider",i,this.showETA),(2==i||1==i&&1==this.showETA)&&(this.showETA=!1)}e.updateIconPosition&&(console.log(this.updateIconPosition),void 0!==e.updateIconPosition.currentValue&&this.updateIconPosition&&(console.log("Ride accepted 381",JSON.parse(localStorage.getItem("JoinedRiderDetails"))),this.iconPositionMap())),e.updateMapIcon&&void 0!==e.updateMapIcon.currentValue&&this.updateMapIcon&&(this.mapCss="freezeRide-passenger"),e.hideRiderRoutePathFromMap&&void 0!==e.hideRiderRoutePathFromMap.currentValue&&this.hideRiderRoutePathFromMap&&(console.log("hideRiderRoutePathFromMap"),this.updateMapOnRiderUnjoined()),e.FavLocationLatLng&&void 0!==e.FavLocationLatLng.currentValue&&this.FavLocationLatLng&&this.initMapPolyline(),e.onSwapAddressFromRide&&void 0!==e.onSwapAddressFromRide.currentValue&&this.onSwapAddressFromRide&&this.onSwapTheAddress()},e.prototype.checkMqttAndUpdateRiderStatus=function(e){console.log("checkMqttAndUpdateRiderStatus","Rider"==localStorage.getItem("userRole")),"Completed"===e.status?(console.log("mqtt ride completed",e),null!=this.RoutePath&&(console.log("clear map"),this.RoutePath.setMap(null))):"Cancelled"===e.status&&"Rider"==localStorage.getItem("userRole")&&(console.log("mqtt ride Cancelled map  475",e),this.cancelOrCompleteRideFromPassenger(e.userId))},e.prototype.ngAfterViewInit=function(){},e.prototype.getLocalData=function(){this.ridePosted=JSON.parse(localStorage.getItem("RidePosted")),this.rideStart=JSON.parse(localStorage.getItem("RideStatus"))},e.prototype.showDeatils=function(){JSON.parse(localStorage.getItem("showCurrentRide"))?(this.showCurrentRide=JSON.parse(localStorage.getItem("showCurrentRide")),this.showCurrentRide.vehicleNumber&&(this.showLockButton=!0,this.showUnlockButton=!1),this.showRideDetails=!0,this.showFreezeRide=!0):(this.showRideDetails=!1,this.showFreezeRide=!1)},e.prototype.onMapReady=function(e){this.MAP_OBJ=e,null!=localStorage.getItem("joinedRiderDetails")&&null!=localStorage.getItem("PassengerRouteDetails")?(console.log("updating te map polyline"),this.updatePolylineforPassenger()):(this.bounds=new google.maps.LatLngBounds,null!=localStorage.getItem("CurrentRidePathPolyline")&&(this.CurrentRidePathPolyline=localStorage.getItem("CurrentRidePathPolyline"),this.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(this.CurrentRidePathPolyline),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4}),this.RoutePath.setMap(this.MAP_OBJ),this.zoomToObject(this.RoutePath))),this.checkPlatform()},e.prototype.onIdle=function(e){},e.prototype.onMarkerInit=function(e){},e.prototype.onMapClick=function(e){this.positions.push(e.latLng),e.target.panTo(e.latLng)},e.prototype.clicked=function(e){},e.prototype.checkMqttAndUpdatePassengerStatus=function(e){if(console.log("checkMqttAndUpdatePassengerStatus in map 425","Passenger"==localStorage.getItem("userRole")),void 0!==e)if("Accepted"===e.invitationStatus){var t=JSON.parse(localStorage.getItem("CurrentRide"));this.getAllParticipants(t.id)}else"Completed"===e.status?(console.log("mqtt ride completed",e),this.cancelOrCompleteRideFromPassenger(e.userId)):"Cancelled"===e.status?(console.log("mqtt ride cancelled",e),this.cancelOrCompleteRideFromPassenger(e.userId)):"Started"===e.status?(console.log("Rider ride started map",501),this.riderRideStarted()):"UnJoined"===e.invitationStatus&&"Passenger"==localStorage.getItem("userRole")?(console.log("update map on rider unjoined in map new 426"),this.updateMapOnRiderUnjoined(),this.mapCss="freezeRide-passenger"):"RideCancelled"==e.invitationStatus&&"Passenger"==localStorage.getItem("userRole")?(this.updateMapOnRiderUnjoined(),this.mapCss="freezeRide-passenger"):console.log("received mqtt1: ",e)},e.prototype.directionsChanged=function(){for(var e=new google.maps.LatLngBounds,t=this.RoutePath.getPath().getArray(),r=0;r<t.length;r++)e.extend(t[r]);this.MAP_OBJ.fitBounds(e),this.MAP_OBJ.setCenter(e.getCenter())},e.prototype.showDirection=function(){this.directionsRendererDirective.showDirections(this.direction),this.directionsRendererDirective.showDirections(this.passengerFromPickupdirection),this.directionsRendererDirective.showDirections(this.riderFromPickupdirection),this.directionsRendererDirective.showDirections(this.pickdropdirection),this.directionsRendererDirective.showDirections(this.passengerdroptodirection),this.directionsRendererDirective.showDirections(this.riderdroptodirection)},e.prototype.getAllParticipants=function(e){var t=this,r=new a.h;r=r.append("id",e),this.mapService.getParticipantsOfRide(r).subscribe((function(e){console.log("getAllParticipants"),localStorage.setItem("Rideparticipants",JSON.stringify(e.resultData)),t.compareTheDistanceOfPassengerFromRiderPickup()}))},e.prototype.DistanceAndDurationCalculation=function(e,t,r){var i=new google.maps.DirectionsService,o=this;i.route({origin:e,destination:t,travelMode:"DRIVING"},(function(e,t){if(console.log(e,t),"OK"===t){var i=e.routes[0].legs[0];o.ETADistance=i.distance.text,o.ETADuration=i.duration.text,o.showETA=!0,console.log("Dirction data",o.ETADistance,o.ETADuration),1==r&&o.participantETAInfoObject(o.ETADistance,o.ETADuration),i||window.alert("Directions request failed")}else window.alert("Directions request failed due to "+t)}))},e.prototype.findCurrentPosition=function(){var e=this;console.log("747"),n.a.googleSpotToken!=localStorage.getItem("partnerAppToken")&&(this.mapsApiLoader.api$.subscribe((function(t){navigator.geolocation?navigator.geolocation.getCurrentPosition((function(t){e.restFlag&&void 0!==e.restFlag?(e.showRideDetails=!0,e.showCurrentRide={},e.showCurrentRide.startTime=e.startTime,e.showCurrentRide.startAddress=e.startAddress_pass,e.showCurrentRide.endAddress=e.endAddress_pass,e.showCurrentRide.vehicleNumber=e.vehicleNum_pass):(e.location=t.coords,e.lat=t.coords.latitude,e.lng=t.coords.longitude,e.currentLat=t.coords.latitude,e.currentLng=t.coords.longitude,console.log("762",e.lat,e.lng,e.currentLat,e.currentLng)),e.reverseGeocoding()})):alert("Location not found ! Please enable location or refresh !")})),this.mapsApiLoader.load())},e.prototype.gpsIconURL=function(){return r("U9zM")},e.prototype.pickupIconUrl=function(){return r("4E52")},e.prototype.RiderDropMarkerUrl=function(){return r("vgwp")},e.prototype.RiderPickUpMarkerUrl=function(){return r("npR+")},e.prototype.passengerPickupPoint=function(){return r("0raH")},e.prototype.passengerDropPoint=function(){return r("rGPa")},e.prototype.RiderLocationAfterStart=function(){return r("Badm")},e.prototype.vehicleMarkerUrl=function(){var e=JSON.parse(localStorage.getItem("CurrentRide"));return r("Car"==e.vehicleType?"Du6M":"cdwK")},e.prototype.getRiderVehicleType=function(){var e=JSON.parse(localStorage.getItem("joinedRiderDetails"));return r("Car"==e.vehicleType?"Du6M":"cdwK")},e.prototype.markerIconUrl=function(){return r("3d1U")},e.prototype.locationMarkerUrl=function(){return r("3hPS")},e.prototype.markerUrl=function(){return r("U9zM")},e.prototype.rideMarkerUrl=function(){return r(this.rideStart?"OYeo":"U9zM")},e.prototype.reverseGeocoding=function(){var e=this;console.log("gcode 850 ",this.lat,this.lng);var t=new a.h;t=(t=(t=(t=t.append("useCase","PWA")).append("userId",localStorage.getItem("userId"))).append("latitude",this.lat.toString())).append("longitude",this.lng.toString()),this.mapService.ReverseGeocodeAPI(t).subscribe((function(t){e.startAddress=t.resultData.locationName}),(function(t){e.openSnackBar(t,"")}))},e.prototype.showMapDirectionsForRider=function(e,t,r,i,o,a){this.showDirec=!0,null!==e&&null!==t&&null!==r&&null!==i&&null!==o&&null!==a&&void 0!==r&&void 0!==e&&void 0!==t&&void 0!==i&&void 0!==o&&void 0!==a&&(this.passengerFromPickupdirection={origin:e,destination:r,travelMode:"WALKING"},this.riderFromPickupdirection={origin:t,destination:r,travelMode:"DRIVING"},this.pickdropdirection={origin:r,destination:i,travelMode:"DRIVING"},this.passengerdroptodirection={origin:i,destination:o,travelMode:"WALKING"},this.riderdroptodirection={origin:i,destination:a,travelMode:"DRIVING"})},e.prototype.hideMapDirections=function(e,t){this.showDirections=!0,this.directionsRenderer.setMap(this.MAP_OBJ),this.direction={origin:e,destination:t,travelMode:"DRIVING",strokeweight:0}},e.prototype.setMarker=function(){n.a.googleSpotToken==localStorage.getItem("partnerAppToken")?(0==this.lat&&0==this.lng&&(this.lat=12.9716,this.lng=77.5946,this.latlng={lat:this.lat,lng:this.lng}),this.allOptions={center:this.latlng,zoom:16,size:18,streetViewControl:!1,zoomControl:!1,fullscreenControl:!1,mapTypeControl:!1,overviewMapControl:!1,styles:o.a.WHITE_WITH_ICON,preserveViewport:!0}):this.allOptions={zoom:16,size:18,streetViewControl:!1,zoomControl:!1,fullscreenControl:!1,mapTypeControl:!1,overviewMapControl:!1,styles:o.a.WHITE_WITH_ICON,preserveViewport:!0}},e.prototype.setMarkerForGpay=function(){console.log("checkPlatform 7"),n.a.googleSpotToken==localStorage.getItem("partnerAppToken")&&0==this.lat&&0==this.lng&&(this.lat=12.9716,this.lng=77.5946,this.latlng={lat:this.lat,lng:this.lng}),this.allOptions={center:this.latlng,zoom:16,size:16,streetViewControl:!1,zoomControl:!1,fullscreenControl:!1,mapTypeControl:!1,overviewMapControl:!1,styles:o.a.WHITE_WITH_ICON,preserveViewport:!0}},e.prototype.freezeRide=function(){this.freezeRideCalled.emit(!0),this.showLockButton=!1,this.showUnlockButton=!0},e.prototype.unFreezeRide=function(){this.unfreezeRideCalled.emit(!0),this.showLockButton=!0,this.showUnlockButton=!1},e.prototype.reschedule=function(){JSON.parse(localStorage.getItem("showCurrentRide"))&&(this.showCurrentRide=JSON.parse(localStorage.getItem("showCurrentRide")),""!==this.showCurrentRide.vehicleNumber?this.riderScheduleCalled.emit(!0):this.passengerScheduleCalled.emit(!0))},e.prototype.cancel=function(){JSON.parse(localStorage.getItem("showCurrentRide"))&&(this.showCurrentRide=JSON.parse(localStorage.getItem("showCurrentRide")),""!==this.showCurrentRide.vehicleNumber?(this.riderCancelCalled.emit(!0),localStorage.removeItem("PassengerRequestList"),localStorage.removeItem("Rideparticipants")):this.passengerCancelCalled.emit(!0))},e.prototype.openCalendar=function(e,t){e.startAt=new Date(t),e.open()},e.prototype.rescheduleRide=function(e,t){var r=this;if(this.rescheduleTime){var i=this.datepipe.transform(this.rescheduleTime,"ddMMyyyyHHmm","UTC"),o=new a.h;o=(o=o.append("id",e)).append("startTime",i),t===this.TYPE_PASSENGER?this.myRidesService.reschedulePassengerRide(o).subscribe((function(e){r.router.navigateByUrl("/my-rides"),r.openSnackBar("Passenger ride rescheduled!","")}),(function(e){r.dialog.open(s.a,{autoFocus:!1,data:e.error.resultData.userMsg})})):t===this.TYPE_RIDER&&this.myRidesService.rescheduleRiderRide(o).subscribe((function(e){r.router.navigateByUrl("/my-rides"),r.openSnackBar("Rider ride rescheduled!","")}),(function(e){r.dialog.open(s.a,{autoFocus:!1,data:e.error.resultData.userMsg})})),this.rescheduleTime=null}},e.prototype.openSnackBar=function(e,t){this.snackBar.open(e,t,{duration:3e3})},e.prototype.mapselector=function(){var e=JSON.parse(localStorage.getItem("Rideparticipants")),t=e.length;if("Rider"==JSON.parse(localStorage.getItem("CurrentRide")).rideType){for(var r=0;r<t;r++)localStorage.getItem("userId")==e[r].userId&&(this.DestinationLatLng=e[r].endPoint.latitude+","+e[r].endPoint.longitude,this.startLatLng=e[r].startPoint.latitude+","+e[r].startPoint.longitude,console.log("destination latlng",this.DestinationLatLng,this.startLatLng)),t>1&&localStorage.getItem("userId")!=e[r].userId&&(this.waypoints=this.waypoints+e[r].startPoint.latitude+","+e[r].startPoint.longitude+"|",console.log(this.waypoints));t>1?-1!=navigator.platform.indexOf("iPhone")||-1!=navigator.platform.indexOf("iPad")||-1!=navigator.platform.indexOf("iPod")?window.open("maps://maps.google.com/maps/dir/?api=1&origin="+this.startLatLng+"&destination="+this.DestinationLatLng+"&travelmode=driving&waypoints="+this.waypoints):window.open("https://www.google.com/maps/dir/?api=1&origin="+this.startLatLng+"&destination="+this.DestinationLatLng+"&travelmode=driving&waypoints="+this.waypoints):window.open("https://www.google.com/maps/dir/?api=1&origin="+this.startLatLng+"&destination="+this.DestinationLatLng+"&travelmode=driving")}else for(r=0;r<t;r++)localStorage.getItem("userId")==e[r].userId&&(this.DestinationLatLng=e[r].endPoint.latitude+","+e[r].endPoint.longitude,this.startLatLng=e[r].startPoint.latitude+","+e[r].startPoint.longitude,console.log(this.startLatLng))},e.prototype.toRadians=function(e){return e*Math.PI/180},e.prototype.toDegrees=function(e){return 180*e/Math.PI},e.prototype.bearing=function(e,t,r){console.log("bearing details",e,t,r);var i=r[0].lat,o=r[0].lng,a=e,s=t;console.log(i,o,a,s),i=this.toRadians(i),o=this.toRadians(o),a=this.toRadians(a),s=this.toRadians(s);var n=Math.sin(s-o)*Math.cos(a),l=Math.cos(i)*Math.sin(a)-Math.sin(i)*Math.cos(a)*Math.cos(s-o),p=Math.atan2(n,l);return p=this.toDegrees(p),this.vehicleAngle=(p+360)%360,(p+360)%360},e.prototype.spotGetLocation=function(){getLocationFromSpot()},e.prototype.checkPlatform=function(){console.log("checkPlatform 1"),n.a.googleSpotToken==localStorage.getItem("partnerAppToken")?(this.getLocationFromGpay(),console.log("checkPlatform 2")):console.log("checkPlatform 3")},e.prototype.getLocationFromGpay=function(){this.spotGetLocation();var e=this;console.log("checkPlatform 4");var t=setInterval((function(){if(null!=localStorage.getItem("google-location")){if(console.log("checkPlatform 5"),"yes"==localStorage.getItem("google-location")){var r=JSON.parse(localStorage.getItem("google-location-data"));console.log("a ",r,r.latitude),e.lat=r.latitude,e.lng=r.longitude,e.latlng={lat:e.lat,lng:e.lng},e.setMarkerForGpay()}else e.lat=12.9716,e.lng=77.5946,e.latlng={lat:e.lat,lng:e.lng},e.setMarkerForGpay();setTimeout((function(){clearInterval(t)}),0),localStorage.removeItem("google-location"),localStorage.removeItem("google-location-data")}}),600)},e.prototype.RiderCurrentPosition=function(e,t){var r=this;console.log("RiderCurrentPosition"),this.mapsApiLoader.api$.subscribe((function(i){navigator.geolocation?navigator.geolocation.getCurrentPosition((function(i){var o=r;o.location=i.coords,o.lat=i.coords.latitude,o.lng=i.coords.longitude,o.currentLat=o.lat,o.currentLng=o.lng,console.log(e,"true"==localStorage.getItem("RideStatus")),1==e&&"true"==localStorage.getItem("RideStatus")&&o.convertLatLngToAddress(o.currentLat,o.currentLng,t)})):alert("Location not found ! Please enable location or refresh !")})),this.mapsApiLoader.load()},e.prototype.convertLatLngToAddress=function(e,t,r){console.log("gcode ",e,t);var i=new google.maps.Geocoder,o=new google.maps.LatLng(e,t),a=this;i.geocode({location:o},(function(e,t){new Promise((function(i,o){t?null!==e&&e[0]&&(a.currentLocationRider=e[0].formatted_address,console.log(a.currentLocationRider),a.convertLatLngToAddressPassenger(a.currentLocationRider,r),i()):window.alert("Geocoder failed due to: "+t)}))}))},e.prototype.convertLatLngToAddressPassenger=function(e,t){var r=JSON.parse(localStorage.getItem("Rideparticipants")),i=this.NextPassengerPickup,o=r[i].startPoint.latitude,a=r[i].startPoint.longitude;this.currentPassengerContact=r[i].contactNo,console.log("currentPassengerContact",this.currentPassengerContact),localStorage.setItem("currentPassengerContact",this.currentPassengerContact);var s=new google.maps.Geocoder,n=new google.maps.LatLng(o,a),l=this;s.geocode({location:n},(function(r,i){new Promise((function(o,a){i?null!==r&&r[0]&&(l.passengerPickupAddress=r[0].formatted_address,console.log(e,l.passengerPickupAddress),l.DistanceAndDurationCalculation(e,l.passengerPickupAddress,t),o()):window.alert("Geocoder failed due to: "+i)}))}))},e.prototype.participantETAInfoObject=function(e,t){for(var r=JSON.parse(localStorage.getItem("Rideparticipants")),i=0;i<r.length;i++)localStorage.getItem("userId")!==r[i].userId&&(this.participantETAInfo.push({participantId:r[i].userId,destinationLatitude:r[i].endPoint.latitude,destinationLongitutde:r[i].endPoint.longitude,durationInTraffic:0,routeDistance:e,duration:t}),console.log("ride participants in map 1053",this.participantETAInfo))},e.prototype.riderLocationUpdate=function(){var e=this;if(1==JSON.parse(localStorage.getItem("Rideparticipants")).length)this.Result=p.a.interval(5e3).subscribe((function(t){e.RiderRideCompleted||(console.log("Without Passenger",e.RiderRideCompleted),e.RiderCurrentPosition(!1,!1))}));else{var t="",r="";this.previousLatLng=[],this.NextPassengerPickup=0,this.Result=p.a.interval(5e3).subscribe((function(i){if(!e.RiderRideCompleted){if(e.RiderCurrentPosition(!0,!0),console.log("latlng",e.lat,e.lng),null!=localStorage.getItem("LiveRideCurrentData")){var o=JSON.parse(localStorage.getItem("LiveRideCurrentData"));e.lastUpdateTime=o.lastUpdateTime,t=e.datepipe.transform(new Date,"ddMMyyyyhhmmss","UTC"),e.squenceNo=o.sequenceNo,r=e.squenceNo+1}else e.lastUpdateTime=e.datepipe.transform(new Date,"ddMMyyyyhhmmss","UTC"),t=e.lastUpdateTime,console.log("lastUpdateTime",e.lastUpdateTime),e.squenceNo=1,r=e.squenceNo+1;e.currentRideShowingOnMap=JSON.parse(localStorage.getItem("CurrentRide")),e.currentUserRole=e.currentRideShowingOnMap.rideType,e.mapCss="Rider"===e.currentUserRole?e.showETA?"freezeRideMoment-Rider":"freezeRide-Rider":"freezeRide-passenger";var s=[],n=0,l=0;null!=localStorage.getItem("LiveRideCurrentData")?(o=JSON.parse(localStorage.getItem("LiveRideCurrentData")),s.push({lat:o.currentLat,lng:o.currentLng}),e.previousLatLng=s,n=e.lat,l=e.lng):(s.push({lat:e.lat,lng:e.lng}),e.previousLatLng=s,n=e.lat,l=e.lng,console.log("previous LatLng",e.previousLatLng)),console.log("eta ifo ",e.participantETAInfo),e.bearing(e.currentLat,e.currentLng,e.previousLatLng);var p=JSON.parse(localStorage.getItem("CurrentRide")),c=new a.h;c=(c=(c=(c=(c=(c=(c=(c=c.append("userId",p.userId)).append("riderRideId",p.id)).append("latitude",e.lat.toString())).append("longitude",e.lng.toString())).append("bearing",e.vehicleAngle.toString())).append("sequenceNo",e.squenceNo)).append("lastUpdateTime",e.lastUpdateTime)).append("participantETAInfo",JSON.stringify(e.participantETAInfo)),e.mapService.RiderLocationUpdate(c).subscribe((function(i){console.log(i),localStorage.setItem("LiveRideCurrentData",JSON.stringify({userId:p.userId,rideId:p.rideid,ETADistance:e.ETADistance,ETADuration:e.ETADuration,currentLat:n,currentLng:l,sequenceNo:r,lastUpdateTime:t,vehicleAngle:e.vehicleAngle,participantsData:e.participantETAInfo}))}),(function(e){console.log(e)}))}}))}},e.prototype.updatePassengerETAInfo=function(){var e=JSON.parse(localStorage.getItem("checkInPassengerList"));this.NextPassengerPickup=parseInt(e.length)+1;for(var t=localStorage.getItem("userId"),r=e.length-1;r>e.length-2;r--)for(var i=0;i<this.markers.length;i++){var o=this.markers[i].name.charAt(0).toUpperCase();parseInt(this.markers[i].userId)!==parseInt(t)&&(parseInt(e[r].userId)==parseInt(this.markers[i].userId)?(this.tempMarkers.push({MarkerType:"Drop",PickupLat:this.markers[i].PickupLat,PickupLng:this.markers[i].PickupLng,DropLat:this.markers[i].DropLat,DropLng:this.markers[i].DropLng,label:{text:o,color:"white",fontSize:"8px"},name:this.markers[i].name,contactNo:this.markers[i].contactNo,userId:this.markers[i].userId}),console.log("Markers",this.markers,i)):(this.tempMarkers.push({MarkerType:"Pickup",PickupLat:this.markers[i].PickupLat,PickupLng:this.markers[i].PickupLng,DropLat:this.markers[i].DropLat,DropLng:this.markers[i].DropLng,label:{text:o,color:"white",fontSize:"8px"},name:this.markers[i].name,contactNo:this.markers[i].contactNo,userId:this.markers[i].userId}),console.log("Markers new1",this.markers,r,i)))}this.markers=[],this.markers=this.tempMarkers,localStorage.setItem("ParticipantsMarker",JSON.stringify(this.markers))},e.prototype.compareTheDistanceOfPassengerFromRiderPickup=function(){for(var e=(a=JSON.parse(localStorage.getItem("Rideparticipants"))).length,t=0;t<e;t++)if(localStorage.getItem("userId")==a[t].userId){var r=(a=JSON.parse(localStorage.getItem("Rideparticipants")))[t].startPoint.latitude,i=a[t].startPoint.longitude,o=a[t].userId;this.riderObject.push(a[t]),console.log("riderObject",this.riderObject)}if(e>1)for(t=0;t<e;t++)if(localStorage.getItem("userId")!=a[t].userId){var a,s=(a=JSON.parse(localStorage.getItem("Rideparticipants")))[t].startPoint.latitude,n=a[t].startPoint.longitude,l=a[t].userId;console.log(s,n,l),this.distance(r,i,s,n,l,o)}this.arrangeParticipantsListOrder()},e.prototype.distance=function(e,t,r,i,o,a){if(e==r&&t==i);else{var s=Math.PI*e/180,n=Math.PI*r/180,l=Math.PI*(t-i)/180,p=Math.sin(s)*Math.sin(n)+Math.cos(s)*Math.cos(n)*Math.cos(l);p>1&&(p=1),p=60*(p=180*(p=Math.acos(p))/Math.PI)*1.1515,this.orderedParticipantsList.push({distance:p*=1.609344,passengerId:o,RiderId:a})}},e.prototype.arrangeParticipantsListOrder=function(){this.arrangeParticipantsList=l.sortBy(this.orderedParticipantsList,"distance");for(var e=JSON.parse(localStorage.getItem("Rideparticipants")),t=e.length,r=this.arrangeParticipantsList.length,i=0;i<r;i++)for(var o=0;o<t;o++)this.arrangeParticipantsList[i].passengerId===e[o].userId&&this.arrangedParticipantsListFinal.push(e[o]);for(i=0;i<t;i++)localStorage.getItem("userId")==e[i].userId&&this.arrangedParticipantsListFinal.push(this.riderObject[0]);var a=this.arrangedParticipantsListFinal.length;for(i=0;i<a;i++){var s=this.arrangedParticipantsListFinal[i].name.charAt(0).toUpperCase(),n=localStorage.getItem("NewPassengeruserId");localStorage.getItem("userId")!==n&&n==this.arrangedParticipantsListFinal[i].userId&&(this.markers.push({MarkerType:"Pickup",PickupLat:this.arrangedParticipantsListFinal[i].startPoint.latitude,PickupLng:this.arrangedParticipantsListFinal[i].startPoint.longitude,DropLat:this.arrangedParticipantsListFinal[i].endPoint.latitude,DropLng:this.arrangedParticipantsListFinal[i].endPoint.longitude,label:{text:s,color:"white",fontSize:"8px"},name:this.arrangedParticipantsListFinal[i].name,contactNo:this.arrangedParticipantsListFinal[i].contactNo,userId:this.arrangedParticipantsListFinal[i].userId}),localStorage.setItem("ParticipantsMarker",JSON.stringify(this.markers)))}localStorage.setItem("Rideparticipants",JSON.stringify(this.arrangedParticipantsListFinal))},e.prototype.cancelOrCompleteRideFromPassenger=function(e){var t=this.markers.length;this.tempMarkers=[];for(var r=0;r<t;r++){var i=this.markers[r].name.charAt(0).toUpperCase();this.markers[r].userId!==e&&this.tempMarkers.push({MarkerType:this.markers[r].MarkerType,PickupLat:this.markers[r].PickupLat,PickupLng:this.markers[r].PickupLng,DropLat:this.markers[r].DropLat,DropLng:this.markers[r].DropLng,label:{text:i,color:"white",fontSize:"8px"},name:this.markers[r].name,contactNo:this.markers[r].contactNo,userId:this.markers[r].userId})}this.markers=[],this.markers=this.tempMarkers,localStorage.setItem("ParticipantsMarker",JSON.stringify(this.markers))},e.prototype.gettingMyRideRoutePath=function(e){this.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(e),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0});var t=this,r=setInterval((function(){void 0!==t.MAP_OBJ&&(setTimeout((function(){clearInterval(r)}),0),null!=t.RoutePath&&t.RoutePath.setMap(null),t.RoutePath.setMap(t.MAP_OBJ),t.zoomToObject(t.RoutePath))}),600);localStorage.setItem("CurrentRidePathPolyline",e)},e.prototype.gettingRoutePath=function(e,t,r){var i=this;if(console.log("1702 in dashboard",this.lat,this.lng,e,t,this.dest,this.pickup),"pickup"==r)var o=e,s=t,n=this.dest.lat,l=this.dest.lng;else"dest"==r&&(o=this.pickup.lat,s=this.pickup.lng,n=e,l=t);var p=new a.h;p=(p=(p=(p=p.append("startLatitude",o)).append("startLongitude",s)).append("endLatitude",n)).append("endLongitude",l),this.mapService.GettingTheRoutePath(p).subscribe((function(e){null!=i.RoutePath&&i.RoutePath.setMap(null);var t=e.resultData[0].overviewPolyline;i.routePath.emit(t),i.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(t),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),i.RoutePath.setMap(i.MAP_OBJ),i.zoomToObject(i.RoutePath)}),(function(e){i.openSnackBar(e,"")}))},e.prototype.initMapPolyline=function(){var e,t,r,i,o=this;console.log("initFavLocationLatLng in map in 1742");var s=JSON.parse(localStorage.getItem("initFavLocationLatLng"));console.log("map in 1560",s);for(var n=0;n<s.length;n++)n<=1&&("home"==s[n].name||"Home"==s[n].name?(e=s[n].latitude,t=s[n].longitude,this.pickup={lat:s[n].latitude,lng:s[n].longitude}):"office"!=s[n].name&&"Office"!=s[n].name||(r=s[n].latitude,i=s[n].longitude,this.dest={lat:s[n].latitude,lng:s[n].longitude}));var l=new a.h;l=(l=(l=(l=l.append("startLatitude",e)).append("startLongitude",t)).append("endLatitude",r)).append("endLongitude",i),this.mapService.GettingTheRoutePath(l).subscribe((function(e){null!=o.RoutePath&&o.RoutePath.setMap(null);var t=e.resultData[0].overviewPolyline;o.routePath.emit(t),o.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(t),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),o.RoutePath.setMap(o.MAP_OBJ),o.zoomToObject(o.RoutePath)}))},e.prototype.onSwapTheAddress=function(){var e=this,t=new a.h;t=(t=(t=(t=t.append("startLatitude",this.pickup.lat)).append("startLongitude",this.pickup.lng)).append("endLatitude",this.dest.lat)).append("endLongitude",this.dest.lng),this.mapService.GettingTheRoutePath(t).subscribe((function(t){null!=e.RoutePath&&e.RoutePath.setMap(null);var r=t.resultData[0].overviewPolyline;e.routePath.emit(r),e.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(r),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),e.RoutePath.setMap(e.MAP_OBJ),e.zoomToObject(e.RoutePath)}))},e.prototype.zoomToObject=function(e){for(var t=new google.maps.LatLngBounds,r=e.getPath().getArray(),i=0;i<r.length;i++)t.extend(r[i]);this.MAP_OBJ.fitBounds(t),this.MAP_OBJ.setCenter(t.getCenter())},e.prototype.callMapIconUpdate=function(){console.log("map related chnages reflcted"),this.mapCss="PassengerJoinedRider",this.updatePolylineforPassenger()},e.prototype.getuserCurrentRideRole=function(e){this.currentUserRole=e,console.log("currentuserrole in map",this.currentUserRole)},e.prototype.iconPositionMap=function(){null!=JSON.parse(localStorage.getItem("CurrentRide"))&&(this.currentRideShowingOnMap=JSON.parse(localStorage.getItem("CurrentRide")),this.currentUserRole=this.currentRideShowingOnMap.rideType,this.mapCss="Rider"===this.currentUserRole?this.showETA?"freezeRideMoment-Rider":"freezeRide-Rider":"freezeRide-passenger")},e.prototype.updatePolylineforPassenger=function(){null!=this.RoutePath&&this.RoutePath.setMap(null);var e=JSON.parse(localStorage.getItem("joinedRiderDetails"));console.log("rider routepath",e),this.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(e.routePathPolyline),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),this.RoutePath.setMap(this.MAP_OBJ),this.zoomToObject(this.RoutePath);var t=JSON.parse(localStorage.getItem("PassengerRouteDetails"));console.log("passenger routepath",t),this.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(t.routePathPolyline),strokeColor:"#1e90ff",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),this.RoutePath.setMap(this.MAP_OBJ),this.zoomToObject(this.RoutePath)},e.prototype.updateMapOnRiderUnjoined=function(){console.log("updating polyline on rider unjoined 1561",this.RoutePath),console.log("updateMapOnRiderUnjoined 1561"),null!=this.RoutePath&&(console.log("clear map"),this.RoutePath.setMap(null));var e=localStorage.getItem("CurrentRidePathPolyline");console.log("updateMapOnRiderUnjoined",e),this.RoutePath=new google.maps.Polyline({path:google.maps.geometry.encoding.decodePath(e),strokeColor:"#1a1a1a",strokeOpacity:.8,strokeWeight:4,geodesic:!0}),this.RoutePath.setMap(this.MAP_OBJ),this.zoomToObject(this.RoutePath)},e.prototype.updateMapOnRiderJoined=function(){var e=this,t=localStorage.getItem("riderRideIdJoined"),r=new a.h;r=r.append("riderRideId",t),this.mapService.getRideParticipantsLocation(r).subscribe((function(t){console.log("riderDetails on joining the Ride",t.resultData);var r=t.resultData,i=e;i.rideStatus=!0,i.Riderstatus=!0,i.riderVehicleLocation={lat:r[0].latitude,lng:r[0].longitude},console.log("this.riderVehicleLocation",i.riderVehicleLocation)}),(function(e){console.log("error 1640 map",e)}))},e.prototype.riderRideStarted=function(){var e=this;this.Result=p.a.interval(1e4).subscribe((function(t){e.updateMapOnRiderJoined()}))},e.prototype.vehicleMarker=function(){return r("HH9Q")},e.prototype.setSymbol=function(){this.symbol={path:this.vehicleMarker()}},e.prototype.eventZoom=function(e){},e}()},Rjk6:function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var i={GREEN:[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#333333"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#fefefe"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#fefefe"},{lightness:17},{weight:1.2}]},{featureType:"administrative",elementType:"labels.icon",stylers:[{saturation:"39"},{lightness:"24"},{gamma:"5.54"},{weight:"5.45"},{invert_lightness:!0},{visibility:"on"},{hue:"#0200ff"}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:20}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:21}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#dedede"},{lightness:21}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#529273"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#8b6f6f"},{lightness:29},{weight:.2}]},{featureType:"road.highway",elementType:"labels.text.fill",stylers:[{saturation:"-39"},{lightness:"-86"},{gamma:"2.25"},{weight:"4.58"}]},{featureType:"road.highway",elementType:"labels.text.stroke",stylers:[{saturation:"-53"},{lightness:"85"},{gamma:"7.31"},{weight:"10.00"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#f2f2f2"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#e9e9e9"},{lightness:17}]}],WHITE:[{featureType:"all",elementType:"labels.text.fill",stylers:[{saturation:36},{color:"#333333"},{lightness:40}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:16}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#fefefe"},{lightness:20}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#fefefe"},{lightness:17},{weight:1.2}]},{featureType:"landscape",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:20}]},{featureType:"poi",elementType:"geometry",stylers:[{color:"#f5f5f5"},{lightness:21}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#dedede"},{lightness:21}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{lightness:17}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#ffffff"},{lightness:29},{weight:.2}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:18}]},{featureType:"road.local",elementType:"geometry",stylers:[{color:"#ffffff"},{lightness:16}]},{featureType:"transit",elementType:"geometry",stylers:[{color:"#f2f2f2"},{lightness:19}]},{featureType:"water",elementType:"geometry",stylers:[{color:"#e9e9e9"},{lightness:17}]}],UBER:[{featureType:"administrative",elementType:"geometry.fill",stylers:[{color:"#d6e2e6"}]},{featureType:"administrative",elementType:"geometry.stroke",stylers:[{color:"#cfd4d5"}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#7492a8"}]},{featureType:"administrative.neighborhood",elementType:"labels.text.fill",stylers:[{lightness:25}]},{featureType:"landscape.man_made",elementType:"geometry.fill",stylers:[{color:"#dde2e3"}]},{featureType:"landscape.man_made",elementType:"geometry.stroke",stylers:[{color:"#cfd4d5"}]},{featureType:"landscape.natural",elementType:"geometry.fill",stylers:[{color:"#dde2e3"}]},{featureType:"landscape.natural",elementType:"labels.text.fill",stylers:[{color:"#7492a8"}]},{featureType:"landscape.natural.terrain",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"geometry.fill",stylers:[{color:"#dde2e3"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{saturation:-100}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{color:"#588ca4"}]},{featureType:"poi.park",elementType:"geometry.fill",stylers:[{color:"#a9de83"}]},{featureType:"poi.park",elementType:"geometry.stroke",stylers:[{color:"#bae6a1"}]},{featureType:"poi.sports_complex",elementType:"geometry.fill",stylers:[{color:"#c6e8b3"}]},{featureType:"poi.sports_complex",elementType:"geometry.stroke",stylers:[{color:"#bae6a1"}]},{featureType:"road",elementType:"labels.icon",stylers:[{saturation:-45},{lightness:10},{visibility:"on"}]},{featureType:"road",elementType:"labels.text.fill",stylers:[{color:"#41626b"}]},{featureType:"road.arterial",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#c1d1d6"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#a6b5bb"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{visibility:"on"}]},{featureType:"road.highway.controlled_access",elementType:"geometry.fill",stylers:[{color:"#9fb6bd"}]},{featureType:"road.local",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"transit",elementType:"labels.icon",stylers:[{saturation:-70}]},{featureType:"transit.line",elementType:"geometry.fill",stylers:[{color:"#b4cbd4"}]},{featureType:"transit.line",elementType:"labels.text.fill",stylers:[{color:"#588ca4"}]},{featureType:"transit.station",elementType:"labels.text.fill",stylers:[{color:"#008cb5"}]},{featureType:"transit.station.airport",elementType:"geometry.fill",stylers:[{saturation:-100},{lightness:-5}]},{featureType:"water",elementType:"geometry.fill",stylers:[{color:"#a6cbe3"}]}],WHITE_CUSTOM:[{featureType:"all",elementType:"labels.text.fill",stylers:[{color:"#333333"},{lightness:"40"},{saturation:"0"},{weight:"0.01"},{gamma:"0.00"}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:"16"}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#333333"},{lightness:"40"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f5f5f5"},{lightness:"10"},{gamma:"1.00"},{weight:"1.00"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#b8e4f5"},{visibility:"on"}]}],WHITE_WITH_ICON:[{featureType:"all",elementType:"labels.text.fill",stylers:[{color:"#333333"},{lightness:"40"},{saturation:"0"},{weight:"0.01"},{gamma:"0.00"}]},{featureType:"all",elementType:"labels.text.stroke",stylers:[{visibility:"on"},{color:"#ffffff"},{lightness:"16"}]},{featureType:"all",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#333333"},{lightness:"40"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f5f5f5"},{lightness:"10"},{gamma:"1.00"},{weight:"1.00"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{visibility:"on"},{color:"#1e2022"},{lightness:"50"}]},{featureType:"poi.government",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"poi.place_of_worship",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"road.arterial",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{visibility:"on"},{color:"#32a1e9"},{lightness:"80"}]}]}},U9zM:function(e,t,r){e.exports=r.p+"marker.9e6effbfb5f1dc6c779f.png"},cdwK:function(e,t,r){e.exports=r.p+"bike.05858a0f56695c452f35.png"},"npR+":function(e,t,r){e.exports=r.p+"Rider_start_point.f89ba27e0619c94298c6.png"},rGPa:function(e,t,r){e.exports=r.p+"Ellipse 160.39aa327b5ce3408bc449.png"},vgwp:function(e,t,r){e.exports=r.p+"Rider_dest_point.17c5705a6acc88fc50f9.png"}}]);